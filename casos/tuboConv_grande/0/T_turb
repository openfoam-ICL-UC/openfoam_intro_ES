/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   uniform 277.5;

boundaryField
{
    inlet
    {
        type            fixedValue;
        value           uniform 277.5;
    }
    outlet
    {
        type            zeroGradient;
    }
    walls
    {
        //type            banana;
        //value           uniform 298.15;
        type            codedMixed;
        refValue        uniform 0;
        refGradient     uniform 0;
        valueFraction   uniform 1;

        name    robin;   // name of generated BC

        codeInclude
        #{
           // #include "fluidThermo.H";
        #};
        
        code
        #{
            // Accedemos a la malla para obtener el espaciamiento de la pared
            const fvMesh& mesh = patch().boundaryMesh().mesh();
            
            // deltaCoeffs = 1 / delta_r es necesario para la condiciÃ³n de borde de BC
            const scalarField& deltaCoeffs = patch().deltaCoeffs();

            // Effective thermal conductivity / W m^-2 K^-1
            // const scalar k_eff = 0.598;
            
            // Liquid density / kg / m^3
            const scalar rho = 1000; 

            // Specific heat capacity / J / kg / K
            const scalar cp = 4180;

            // Effective thermal conductivity
            const volScalarField& alphaEff = this->db().objectRegistry::lookupObject<volScalarField>("alphaEff");
            
            const volScalarField& alphaEff = this->db().objectRegistry::lookupObject<volScalarField>("alphaEff");


            // Calculate effective thermal conductivity
            const volScalarField k_eff = alphaEff * rho * cp;

            Info << "Effective thermal diffusivity " << alphaEff << endl;

            Info << "Effective thermal conductivity " << k_eff << endl;
            // const volScalarField& rho = this->db().objectRegistry::lookupObject<volScalarField>("rho");

            // Convection coefficient 
            const scalar h = 10;   

            this->refValue() = 298.15;
            this->refGrad() = 0;
            
            this->valueFraction() = 1.0/(1.0 + k_eff/(h*(1/deltaCoeffs)) ); // Robin BC
        #};
    }
}

// ************************************************************************* //
